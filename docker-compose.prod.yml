version: '3.8'

services:

  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: guseyn.com
    volumes:
      - ./output.log:/app/output.log
      - ./nodes:/app/nodes
      - ./web-app:/app/web-app
      - ./web-app/.well-known/acme-challenge:/app/web-app/.well-known/acme-challenge  # Mount ACME challenge folder
      - ./web-app/ssl:/app/web-app/ssl  # Mount folder for SSL certs inside app/guseyn.com/ssl
    ports:
      - "443:443"  # Prime HTTP(S)/2 
      - "80:80"   # Proxy
    networks:
      - app-network
    # Override CMD in Dockerfile with my ENV variable
    command: sh -c "npm run guseyn:prod:start"

  certbot:
    image: certbot/certbot
    container_name: certbot
    depends_on:
      - app
    volumes:
      - ./web-app/.well-known/acme-challenge:/var/www/html/.well-known/acme-challenge  # ACME challenge folder
      - ./web-app/ssl:/etc/letsencrypt  # Mount SSL cert folder
    entrypoint: >
      sh -c "
      if [ ! -f /etc/letsencrypt/live/${DOMAIN}/fullchain.pem ]; then
        certbot certonly \
          --non-interactive \
          --webroot \
          --webroot-path=/var/www/html \
          --email ${DOMAIN_EMAIL} \
          --agree-tos \
          -d ${DOMAIN},www.${DOMAIN};
      else
        certbot renew;
      fi;
      while true; do sleep 3600; done"
    networks:
      - app-network

  # certbot-cron:
  #   image: alpine
  #   container_name: certbot-cron
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock # Required to restart or run containers
  #   entrypoint: >
  #     sh -c "
  #     echo '0 */12 * * * docker-compose run certbot' > /etc/crontabs/root &&
  #     crond -f -d 8
  #     "
  #   networks:
  #     - app-network

networks:
  app-network:
    driver: bridge
